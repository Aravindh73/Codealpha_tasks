# -------------------------------------
# 1. Import Required Libraries
# -------------------------------------
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import warnings
warnings.filterwarnings("ignore")

# -------------------------------------
# 2. Load Dataset
# -------------------------------------
file_path = 'Unemployment in India.xlsx'
df = pd.read_excel(file_path, sheet_name='in')

# -------------------------------------
# 3. Clean Column Names
# -------------------------------------
df.columns = df.columns.str.strip().str.replace(' ', '_')
df.columns = df.columns.str.replace('(', '').str.replace(')', '')

# -------------------------------------
# 4. Convert Date Column to datetime
# -------------------------------------
df['Date'] = pd.to_datetime(df['Date'], dayfirst=True)

# -------------------------------------
# 5. Display Initial Information
# -------------------------------------
print("Date Range:", df['Date'].min(), "to", df['Date'].max())
print("Regions:", df['Region'].nunique(), "Unique Regions")
print("\nMissing Values:\n", df.isnull().sum())

# -------------------------------------
# 6. Handle Missing Values (Forward Fill)
# -------------------------------------
df.fillna(method='ffill', inplace=True)

# -------------------------------------
# 7. Create a COVID Period Column
# -------------------------------------
df['Covid_Period'] = df['Date'].apply(lambda x: 'During COVID' if x >= pd.to_datetime('2020-03-01') else 'Pre-COVID')

# -------------------------------------
# 8. Unemployment Over Time (National Average)
# -------------------------------------
monthly_avg = df.groupby('Date')['Estimated_Unemployment_Rate_%'].mean()

plt.figure(figsize=(12, 6))
monthly_avg.plot(marker='o', color='darkblue')
plt.axvline(pd.to_datetime('2020-03-01'), color='red', linestyle='--', label='COVID Start')
plt.title("National Average Unemployment Rate Over Time")
plt.xlabel("Date")
plt.ylabel("Unemployment Rate (%)")
plt.grid(True)
plt.legend()
plt.tight_layout()
plt.show()

# -------------------------------------
# 9. Boxplot: COVID vs Pre-COVID
# -------------------------------------
plt.figure(figsize=(8, 5))
sns.boxplot(x='Covid_Period', y='Estimated_Unemployment_Rate_%', data=df, palette='Set2')
plt.title("Unemployment Rate: Pre-COVID vs During-COVID")
plt.grid(True)
plt.tight_layout()
plt.show()

# -------------------------------------
# 10. COVID Impact Numbers
# -------------------------------------
pre_covid = df[df['Covid_Period'] == 'Pre-COVID']['Estimated_Unemployment_Rate_%']
during_covid = df[df['Covid_Period'] == 'During COVID']['Estimated_Unemployment_Rate_%']
print(f"Pre-COVID Avg: {pre_covid.mean():.2f}%")
print(f"During-COVID Avg: {during_covid.mean():.2f}%")

# -------------------------------------
# 11. Regional Trend Over Time (Top 5 States)
# -------------------------------------
top_states = df['Region'].value_counts().head(5).index
top_df = df[df['Region'].isin(top_states)]

plt.figure(figsize=(14, 7))
sns.lineplot(data=top_df, x='Date', y='Estimated_Unemployment_Rate_%', hue='Region')
plt.title("Unemployment Rate Trend - Top 5 States")
plt.xlabel("Date")
plt.ylabel("Unemployment Rate (%)")
plt.grid(True)
plt.tight_layout()
plt.show()

# -------------------------------------
# 12. Area-wise Unemployment Analysis
# -------------------------------------
plt.figure(figsize=(8, 6))
sns.boxplot(x='Area', y='Estimated_Unemployment_Rate_%', data=df, palette='Pastel1')
plt.title("Unemployment Rate by Area Type (Urban vs Rural)")
plt.grid(True)
plt.tight_layout()
plt.show()

# -------------------------------------
# 13. Seasonality: Monthly Pattern
# -------------------------------------
df['Month'] = df['Date'].dt.month
monthly_pattern = df.groupby('Month')['Estimated_Unemployment_Rate_%'].mean()

plt.figure(figsize=(10, 5))
monthly_pattern.plot(kind='bar', color='teal')
plt.title("Average Monthly Unemployment Rate")
plt.xlabel("Month")
plt.ylabel("Unemployment Rate (%)")
plt.grid(axis='y')
plt.tight_layout()
plt.show()

# -------------------------------------
# 14. Correlation Analysis
# -------------------------------------
correlation = df[['Estimated_Unemployment_Rate_%', 'Estimated_Employed', 'Estimated_Labour_Participation_Rate_%']].corr()

plt.figure(figsize=(6, 4))
sns.heatmap(correlation, annot=True, cmap='Blues')
plt.title("Correlation Matrix")
plt.tight_layout()
plt.show()

# -------------------------------------
# 15. Save Cleaned Dataset (Optional)
# -------------------------------------
df.to_csv("cleaned_unemployment_india.csv", index=False)
print("Cleaned dataset saved as 'cleaned_unemployment_india.csv'")
